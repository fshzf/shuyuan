[
  {
    "bookSourceName": "tpyyc笔趣阁",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.tpyyc.com",
    "customOrder": 16,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "",
    "header": "{\n\"User-Agent\":\"Mozilla/5.0 (Linux; Android 9) Mobile Safari/537.36\",\"referer\":\"{{baseUrl}}\",\n}",
    "lastUpdateTime": "1738716813072",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "[property=\"og:description\"]@content",
      "kind": "[property=\"og:novel:category\"]@content",
      "lastChapter": "[property=\"og:novel:lastest_chapter_name\"]@content",
      "name": "[property=\"og:title\"]@content",
      "tocUrl": "",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "#article@html",
      "nextContentUrl": ""
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "intro": "",
      "name": "",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": ".s4@text",
      "bookList": ".search-list li!0",
      "bookUrl": ".s2 a@href",
      "coverUrl": "",
      "intro": "",
      "kind": ".s1@text",
      "lastChapter": ".s3@text",
      "name": ".s2 a@text",
      "wordCount": ""
    },
    "ruleToc": {
      "chapterList": "dl dd",
      "chapterName": "a@text",
      "chapterUrl": "a@href",
      "isPay": "",
      "nextTocUrl": ""
    },
    "searchUrl": "{{cookie.removeCookie(source.getKey())}}/search/?searchkey={{key}}",
    "weight": 0
  },
  {
    "bookSourceGroup": "番茄小说",
    "ruleExplore": {
      "author": "author",
      "bookList": "$.data.data",
      "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}",
      "wordCount": "word_number",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}",
      "coverUrl": "thumb_url",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "name": "book_name"
    },
    "weight": 63,
    "ruleContent": {
      "content": "content"
    },
    "loginUrl": "function login() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        }\n    } catch (error) {\n    }\n    ;\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n        }} catch (error) {\n    }\n    ;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n\n    for (let server of serverList) {\n        let key = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (key) {\n            let keyParts = key.split('secretKey=');\n            if (keyParts.length > 1) {\n                key = keyParts[keyParts.length - 1];\n                setArgument('key', key);\n                return key;\n            }\n        }\n    }\n\n    return '';\n}\n\n// 填写密钥\nfunction loginqt() {\n    let key = gets_key()\n    if (key && key != \"\") {\n        java.toast(\"您已填写秘钥:\" + key);\n        return false\n    }\n    java.startBrowserAwait(getArgument('server') + '/check_key', '登录番茄最新版小说书源');\n    key = gets_key()\n    if (key) {\n        java.longToast('登录成功，秘钥：' + key);\n        return true\n    } else {\n        java.toast('登录失败！！！！！');\n        return false\n    }\n}\n\n//登录番茄\nfunction fq_login() {\n    var cookies = cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')\n    java.log(cookies)\n    if (cookies && cookies != \"\") {\n        java.toast(\"请不要重复登录，请先退出登录！\")\n        return false\n    }\n    try {\n        java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n    } catch (e) {\n        java.toast(e)\n    }\n    try {\n        cookie.removeCookie(\"snssdk.com\")\n    } catch (e) {\n    }\n    var cookies = cookie.getCookie(\"fanqienovel.com\")\n    if (!cookies || cookies == \"\") {\n        java.toast(\"登录失败！\")\n        return false\n    }\n    java.toast(\"登录成功！\")\n    return true\n}\n\n//退出番茄\nfunction logout() {\n    cookie.removeCookie(\"fanqienovel.com\");\n    cookie.removeCookie(\"snssdk.com\");\n    //cookie.removeCookie(getArgument('server'));\n    java.toast(\"退出登录成功\");\n}\n\n//获取参数\nfunction getArgument(key) {\n    let open_argument = source.getVariable();\n    return getArguments(open_argument, key);\n}\n\n//设置参数\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument, '');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\n//首页\nfunction api() {\n    java.startBrowserAwait(getArgument('server') + '/', \"接口文档\");\n}\n\n//打赏\nfunction vip() {\n    java.startBrowserAwait(getArgument('server') + '/coffee', \"喝咖啡\");\n}\n\n//获取密钥\nfunction hqmy() {\n    java.startBrowserAwait(getArgument('server') + '/key', \"获取密钥\");\n}\n\nvar server = getArgument('server');\n\n//获取搜索\nfunction get_search() {\n    var search = getArgument('search');\n    var datadist = {\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"0\": \"音频模式\",\n    };\n    var tishi = '\\n\\n当前搜索模式：' + datadist[search]\n    java.toast(tishi);\n    return search\n}\n\n//设置搜索\nfunction set_search(mode, name) {\n    setArgument('search', mode);\n    setArgument('tone_id', mode);\n    java.toast('\\n\\n已切换至' + name);\n}\n\n//获取服务器\nfunction get_server() {\n    var server = getArgument('server');\n    var tishi = '\\n\\n当前服务器：' + server\n    java.toast(tishi);\n    return server\n}\n\n\n//设置服务器\nfunction set_server() {\n    let zdyserver;\n    try {\n        zdyserver = String(source.getLoginInfoMap()['服务器地址(可不填)']);\n        if (zdyserver.includes('http')) {\n            setArgument('server', zdyserver);\n            java.toast(`\\n\\n当前服务器为自定义服务器\\n${zdyserver}\\n\\n切换服务器请先清空服务器地址中的数据`);\n        } else {\n            zdyserver = '';\n        }\n    } catch (error) {\n        zdyserver = '';\n    }\n    ;\n    if (!zdyserver) {\n        const servers = String(source.bookSourceUrl).split('\\n').map(s => s.trim()).filter(s => s && !s.includes('提示'));\n        const currentServer = getArgument('server') || '';\n        const currentIndex = servers.indexOf(currentServer);\n\n        const nextIndex = currentIndex >= 0 ? (currentIndex + 1) % servers.length : 0;\n        const nextServer = servers[nextIndex];\n\n        setArgument('server', nextServer);\n        java.toast(`\\n\\n当前服务器${nextIndex+1}:${nextServer}\\n\\n注意：切换服务器后需要在详情页刷新目录才能生效`);\n    }\n}\n\n\n//获取音色\nvar tone_id = getArgument('tone_id');\n\nfunction get_tone_id(arg) {\n    var datadist = {\n        \"0\": \"默认音色\",\n        \"-1\": \"阅读模式\",\n        \"-2\": \"漫画模式\",\n        \"51\": \"多人发音\",\n        \"1\": \"甜美少女\",\n        \"2\": \"清亮青叔\",\n        \"5\": \"开朗青年\",\n        \"6\": \"温柔淑女\",\n        \"4\": \"成熟大叔\",\n        \"74\": \"大叔升级\",\n        \"30\": \"优雅御姐\"\n    };\n    var tone_id = datadist[arg] || arg;\n    var tishi = '\\n\\n当前音色：' + tone_id;\n    java.toast(tishi);\n}\n\n//设置音色\nfunction set_tone_id(mode, name) {\n    let zdytone_id;\n    try {\n        zdytone_id = String(source.getLoginInfoMap()['其他音色填写后点击右上角✔']);\n        if (zdytone_id) {\n            setArgument('tone_id', zdytone_id);\n            java.toast(`\\n\\n当前音色为自定义音色\\n${zdytone_id}\\n\\n切换音色请先清空音色输入框中的数据`);\n        } else {\n            zdytone_id = '';\n        }\n    } catch (error) {\n        zdytone_id = '';\n    }\n    if (!zdytone_id) {\n        let toast = \"\\n\\n已切换至：\" + name + '\\n\\n切换后需要刷新详情页';\n        setArgument('tone_id', mode);\n        java.toast(toast);\n    }\n}\n\nfunction zr() {\n    let toast = '\\n\\n真人语音无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}\n\nfunction mh() {\n    let toast = '\\n\\n漫画无法手动切换\\n\\n前往搜索找包含主播的书籍进入即可';\n    java.toast(toast);\n}",
    "searchUrl": "{{key}}\n@js:\nlet search_title = result;\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\n\nlet open_argument = source.getVariable();\n\t   \t\t\t   \t\n\t   \t\t\t   \t\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet media;\nif (ms == '0') {\n    media = `${base_url}/searchAudio?title=`+search_title+'&media=喜马拉雅,番茄';\n} else if (ms == '-2') {\n    media = `${base_url}/searchCaricature?title=`+search_title+'&media=番茄';\n} else {\n     media = `${base_url}/searchNovel?title=`+search_title\n}\nkey = '&key=' + key;\n//java.toast(media + key);\nmedia + key",
    "ruleSearch": {
      "author": "author",
      "bookList": "$..book_data[*]",
      "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n   \n    let url;\n    let last;\n    if (media == \"番茄\") {\n    \t    last=fq_last(bookid);\n        return last\n    } else if (media == \"七猫\") {\n    \t   last=qm_last(bookid);\n        return last\n        \n    } else {\n    \treturn '无'\n    \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n        let last =JSON.parse(java.ajax(url)).data[0]; \n        return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) {  \n  if(param==null) return '';  \n  var paramStr = '';  \n  var t = typeof (param);  \n  if (t == 'string' || t == 'number' || t == 'boolean') {  \n    paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param);  \n  } else {  \n    for (var i in param) {  \n      var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i);  \n      paramStr += urlEncode(param[i], k, encode);  \n    }  \n  }  \n  return paramStr;  \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 =  `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\nlet media = result.split(\"-\")[0];\nlet bookid = result.split(\"-\")[1].split(\"_\")[0];\nlet lasts = lastChapterTitle(media,bookid);\n\n`${media}: ${lasts}`\n</js>",
      "coverUrl": "thumb_url",
      "wordCount": "word_number",
      "intro": "{{$.media}}小说 \n{{$.abstract}}",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "checkKeyWord": "炙热沦陷",
      "name": "book_name",
      "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url,media] = result.split(\"|==|\");\n\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/multi_detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>"
    },
    "enabledExplore": true,
    "ruleBookInfo": {
      "author": "author",
      "tocUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\n\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id);\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${base_url}/detail?bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>",
      "lastChapter": "last_chapter_title",
      "wordCount": "word_number",
      "intro": "$..book_id\n<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"默认发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\",\n  '999':'喜马拉雅听书'\n};\n\nlet ms;\nms = datadist[tone_id];\nif (!ms) {\n\t\tms = tone_id\n\t\t}\n\nvar tishi = '\\n\\n当前模式：'+ ms +'\\n\\n如切换,请切换请下拉刷新详情页\\n由于缓存原因，已听的需要切换到下一章再切回来\\n'\n\n\nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n    info = JSON.parse(java.ajax(`${base_url}/tts_detail?&bookid=${bookid}`));\n    } catch (error) {\n        info = {'abstract': \"\"}\n        }\n} else {\n    info = {'abstract': \"\"}\n    }\n\n\nif (!key) {\n    jj = '\\n\\n❌️当前用户未填写密钥，请先输入密钥\\n密钥获取途径，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n    }\n    else if (!info.abstract) {\n    jj = \"\"\n    } else {\n    jj =tishi +  info.abstract\n    }\n\n</js>",
      "kind": "category&&status&&score&&last_chapter_update_time",
      "coverUrl": "thumb_url",
      "name": "book_name",
      "init": ""
    },
    "ruleToc": {
      "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\n\n\n// 设备类型检测\nlet device, devicetype;\ntry {\n    devicetype = java.androidId();\n    device = 'android';\n} catch (e) {\n    devicetype = java.deviceID();\n    device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name, author, thumb_url, media] = result.split(\"|==|\");\n\n\nlet catalogue_url = `${base_url}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=${tone_id}&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url",
      "chapterList": "data.chapterListWithVolume[*].*\n@js:\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet tone_id = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nlet genreValue = JSON.parse(java.ajax(book.bookUrl)).genre;\nvar datadist = {\n  \"-1\": \"纯净阅读\",\n  \"-2\": \"纯净漫画\",\n  \"51\": \"多人发音\",\n  \"0\": \"真人发音\",\n  \"1\": \"甜美少女\",\n  \"2\": \"清亮青叔\",\n  \"5\": \"开朗青年\",\n  \"6\": \"温柔淑女\",\n  \"4\": \"成熟大叔\",\n  \"74\": \"大叔升级\"\n};\nvar ms = String(tone_id)\nif (genreValue === '0' && ms === '-1') {\n\tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n} else if (genreValue === '1') {\n\t  if (device === 'android') {\n    book.type = 64;} else {\n    \tbook.type = 2;\n    \t}\n}else if (genreValue === '4') {\n\t   var ms = '0';\n\t   if (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n} else if (genreValue === '9999'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t }else if (genreValue!='0' && genreValue!='1' && genreValue!='4' && ms === '-1'){\n   \tvar ms = '-1';\n   \tif (device === 'android') {\n    book.type = 8;} else {\n    \tbook.type = 0;\n    \t}\n\t } else {\n\t \tif (device === 'android') {\n    book.type = 32;} else {\n    \tbook.type = 1;\n    \t}\n\t \t};\nresult",
      "updateTime": "firstPassTime",
      "chapterName": "title"
    },
    "loginUi": "\n[ {\n        \"name\":  \"☕请杯咖啡，解除下载限制\",\n        \"type\": \"button\",\n        \"action\": \"vip()\"\n      },    {\n        \"name\":  \"更新书源\",\n        \"type\": \"button\",\n        \"action\": \"api()\"\n      },\n\n    {\n        \"name\":  \"♥♥♥♥♥♥ 填写密钥 ♥♥♥♥♥♥\",\n        \"type\": \"button\",\n        \"action\":\"loginqt()\"\n      },    {\n        \"name\":  \"服务器地址(可不填)\",\n        \"type\": \"text\"\n        },{\n        \"name\":  \"番茄登录\",\n        \"type\": \"button\",\n        \"action\": \"fq_login()\"\n      },\n\n    {\n        \"name\":  \"退出登录\",\n        \"type\": \"button\",\n        \"action\": \"logout()\"\n      },{\n        \"name\":  \"切换服务器\",\n        \"type\": \"button\",\n        \"action\": \"set_server(server)\"\n      },{\n        \"name\":  \"当前模式\",\n        \"type\": \"button\",\n        \"action\": \"get_search()\"\n      },\n      {\n        \"name\":  \"当前音色\",\n        \"type\": \"button\",\n        \"action\": \"get_tone_id(tone_id)\"\n      },   {\n        \"name\":  \"当前服务器\",\n        \"type\": \"button\",\n        \"action\": \"get_server()\"\n      },\n      {\n        \"name\": \"🔎搜小说\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-1','小说搜索')\"\n      },\n      {\n        \"name\": \"🔎搜音频\",\n        \"type\": \"button\",\n        \"action\": \"set_search('0','音频搜索')\"\n      },{\n        \"name\": \"🔎搜漫画\",\n        \"type\": \"button\",\n        \"action\": \"set_search('-2','漫画搜索')\"\n      },\n      {\n        \"name\": \"阅读模式\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('-1','纯净阅读')\"\n      },\n    {\n        \"name\": \"多人发音\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('51','多人发音')\"\n      },\n      {\n        \"name\": \"甜美少女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('1','甜美少女')\"\n      },\n      {\n        \"name\": \"清亮青叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('2','清亮青叔')\"\n      },\n      {\n        \"name\": \"开朗青年\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('5','开朗青年')\"\n      },\n      {\n        \"name\": \"温柔淑女\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('6','温柔淑女')\"\n      },\n      {\n        \"name\": \"成熟大叔\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('4','成熟大叔')\"\n      },\n      {\n        \"name\": \"大叔升级\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('74','大叔升级')\"\n      },\n      {\n        \"name\": \"优雅御姐\",\n        \"type\": \"button\",\n        \"action\": \"set_tone_id('30','优雅御姐')\"\n      },\n      {\n        \"name\": \"其他音色填写后点击右上角✔\",\n        \"type\": \"text\"\n      }\n    ]",
    "jsLib": "function get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\nreturn key\n}\n\nfunction getArguments(open_argument,key) {\n    try {\n        open_argument = JSON.parse(open_argument);\n    } catch (e) {\n        open_argument = {\n            \"search\": \"-1\",\n            \"tone_id\": \"-1\",\n            \"server\": \"https://api.langge.tk\"\n        };\n    }\n    if (key) {return open_argument[key];} else {return open_argument}\n}\n",
    "bookSourceUrl": "https://api.langge.tk\nhttps://api.doubi.tk\nhttp://api.dahuilang.cf\n提示：点击登录切换服务器按钮可进行切换(当前书源为融合版)",
    "lastUpdateTime": "1738904270443",
    "customOrder": -7,
    "bookSourceType": 0,
    "modificationDate": 1737139157939.729,
    "enabled": true,
    "bookSourceName": "🍅番茄最新版融合",
    "variableComment": "",
    "bookSourceComment": "20241104新增指定来源搜索\n20241124新增详情页音色提示\n20241126修复bug\n20241129更新秘钥填写方式\n20241217更新服务器切换功能\n20250104新增服务器\n20250105登录新增手动填写服务器、音色",
    "cloudRecordID": "7993394A-3FA8-433B-A265-C35DDAC62B85",
    "respondTime": 1017,
    "exploreUrl": "<js>\nfunction setArgument(key, value) {\n    let open_argument = source.getVariable();\n    open_argument = getArguments(open_argument,'');\n    open_argument[key] = value;\n    open_argument = JSON.stringify(open_argument);\n    source.setVariable(open_argument);\n    return open_argument;\n}\n\nfunction gets_key() {\n    var servers = String(source.bookSourceUrl);\n    const serverList = servers.split('\\n');\n    \n    for (let server of serverList) {\n        let keys = String(cookie.getCookie(server)) || String(java.getCookie(server));\n        if (keys) {\n            let keyParts = keys.split('secretKey=');\n            if (keyParts.length > 1) {\n                keys = keyParts[keyParts.length - 1];\n                setArgument('key', keys);\n                return keys;\n            }\n        }\n    }\n    return '';  \n }\n\nlet open_argument = source.getVariable();\nlet base_url = getArguments(open_argument,'server');\nlet ms = getArguments(open_argument,'tone_id');\nlet key = getArguments(open_argument,'key');\nif (!key) {\n\tkey = gets_key();\n\t}\n\nlet data = {\n    \"男\": {\n        \"玄幻\": 7,\n        \"都市\": 1,\n        \"洪荒\": 66,\n        \"无敌\": 384,\n        \"末世\": 68,\n        \"诸天万界\": 71,\n        \"科幻\": 8,\n        \"星际\": 77,\n        \"重生\": 36,\n        \"系统\": 19,\n        \"神豪\": 20,\n        \"鉴宝\": 17,\n        \"三国\": 67,\n        \"二次元\": 39,\n        \"历史\": 12,\n        \"美食\": 78,\n        \"奶爸\": 42,\n        \"娱乐圈\": 43,\n        \"大唐\": 73,\n        \"外卖\": 75,\n        \"宠物\": 74,\n        \"学霸\": 82,\n        \"游戏动漫\": 57,\n        \"体育\": 15,\n        \"直播\": 69,\n        \"年代\": 79,\n        \"文化历史\": 62,\n        \"海岛\": 40,\n        \"神医\": 26,\n        \"明朝\": 126,\n        \"武侠\": 16,\n        \"灵异\": 100,\n        \"穿越\": 37,\n        \"剑道\": 80,\n        \"都市修真\": 124,\n        \"赘婿\": 25,\n        \"盗墓\": 81,\n        \"推理\": 61,\n        \"无限流\": 70,\n        \"种田\": 23,\n        \"战争\": 97,\n        \"天才\": 90,\n        \"职场\": 127,\n        \"悬疑\": 10,\n        \"成功励志\": 56,\n        \"空间\": 44,\n        \"腹黑\": 92,\n        \"诗歌散文\": 46,\n        \"家庭\": 125,\n        \"影视小说\": 45,\n        \"生活\": 48,\n        \"都市生活\": 2,\n        \"扮猪吃虎\": 93,\n        \"大秦\": 377,\n        \"漫威\": 374,\n        \"火影\": 368,\n        \"西游\": 373,\n        \"龙珠\": 376,\n        \"聊天群\": 381,\n        \"海贼\": 370,\n        \"奥特同人\": 367,\n        \"特种兵\": 375,\n        \"反派\": 369,\n        \"校花\": 385,\n        \"女帝\": 378,\n        \"单女主\": 389,\n        \"神奇宝贝\": 371,\n        \"九叔\": 383,\n        \"求生\": 379,\n        \"无女主\": 391,\n        \"武魂\": 386,\n        \"网游\": 372,\n        \"战神\": 27,\n        \"都市脑洞\": 262,\n        \"都市种田\": 263,\n        \"都市日常\": 261,\n        \"历史脑洞\": 272,\n        \"玄幻脑洞\": 257,\n        \"奇幻仙侠\": 259,\n        \"都市青春\": 396,\n        \"传统玄幻\": 258,\n        \"历史古代\": 273\n    },\n    \"女\": {\n        \"幻想言情\": 32,\n        \"现代言情\": 3,\n        \"现言甜宠\": 395,\n        \"现言脑洞\": 267,\n        \"先婚后爱\": 265,\n        \"都市日常\": 261,\n        \"古言脑洞\": 253,\n        \"古言萌宝\": 249,\n        \"古言甜宠\": 394,\n        \"现言日常\": 269,\n        \"现言复仇\": 268,\n        \"玄幻言情\": 248,\n        \"医术\": 247,\n        \"无敌\": 384,\n        \"种田\": 23,\n        \"萌宝\": 28,\n        \"美食\": 78,\n        \"游戏动漫\": 57,\n        \"娱乐圈\": 43,\n        \"直播\": 69,\n        \"女扮男装\": 388,\n        \"二次元\": 39,\n        \"团宠\": 94,\n        \"无cp\": 392,\n        \"青梅竹马\": 387,\n        \"病娇\": 380,\n        \"科幻\": 8,\n        \"武侠\": 16,\n        \"年代\": 79,\n        \"重生\": 36,\n        \"灵异\": 100,\n        \"公主\": 83,\n        \"甜宠\": 96,\n        \"盗墓\": 81,\n        \"系统\": 19,\n        \"女强\": 86,\n        \"皇后\": 84,\n        \"推理\": 61,\n        \"文化历史\": 62,\n        \"生活\": 48,\n        \"反派\": 369,\n        \"末世\": 68,\n        \"悬疑\": 10,\n        \"穿越\": 37,\n        \"学霸\": 82,\n        \"扮猪吃虎\": 93,\n        \"清穿\": 76,\n        \"穿书\": 382,\n        \"快穿\": 24,\n        \"皇叔\": 87,\n        \"空间\": 44,\n        \"宠妻\": 30,\n        \"豪门总裁\": 29,\n        \"影视小说\": 45,\n        \"成功励志\": 56,\n        \"职场\": 127,\n        \"民国\": 390,\n        \"都市生活\": 2,\n        \"腹黑\": 92,\n        \"星际\": 77,\n        \"天才\": 90,\n        \"古代言情\": 5,\n        \"家庭\": 125,\n        \"兽世\": 72,\n        \"校园\": 4,\n        \"诗歌散文\": 46,\n        \"虐文\": 95,\n        \"嫡女\": 88,\n        \"王妃\": 85,\n        \"精灵\": 89,\n        \"马甲\": 266\n    }\n};\n\nconst groupDatas = [];\nlet infoData = [];\nfunction deviceType() {\n  try {\n    return!!java.androidId();\n  } catch (e) {\n    return false;\n  }\n}\nlet device = deviceType()? 'android' : 'ios';\nif (device == 'android' && (get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com'))))) {\n    function groupQuery() {\n        const url = base_url + \"/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\";\n        const res = java.ajax(url);\n        const data = JSON.parse(res).data;\n\n        data.forEach(group => {\n            let key;\n            for (key in group) {\n                groupDatas.push({\n                    \"title\": key,\n                    \"url\": base_url +\"/bookshelf2?page={{page}}&book_ids=\" + group[key].join(\",\"),\n                    \"style\": {\n                        \"layout_flexGrow\": 1,\n                        \"layout_flexBasisPercent\": 0.45\n                    }\n                });\n            }\n        });\n\n        if (groupDatas.length % 2 !== 0) {\n            groupDatas.push({\n                \"title\": \"--\",\n                \"url\": \"\",\n                \"style\": {\n                    \"layout_flexGrow\": 1,\n                    \"layout_flexBasisPercent\": 0.45\n                }\n            });\n        }\n    }\n\n    try {\n    \tjava.longToast(\"请稍等,正在更新分组数据!\");\n    // 用户信息\n    const userUrl = base_url + '/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\n    const userRes = java.ajax(userUrl);\n    const userInfo = JSON.parse(userRes).data.name;\n\n    infoData = [\n        {\n            \"title\": `${userInfo}个人中心`,\n            \"url\": \"\",\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        }\n    ];\n    groupQuery();\n    } catch (e) {\n    java.longToast(\"网络错误或登录失效或阅读版本过低，请重新登录番茄重试！\");\n    }\n\n}\n\n// 合并数据\nlet datas1 = [\n    {\n        \"title\": \"番茄官方书架\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    },\n    {\n        \"title\": \"番茄最新版阅读记录\",\n        \"url\": base_url + \"/bookshelf?page={{page}}&key=\" + key,\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.45\n        }\n    }\n];\n\nconst datas2 = [{\n        \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )و\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    },\n    {\n        \"title\": \"推荐榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=10',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"完结榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=11',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"热搜榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=12',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"黑马榜单\",\n        \"url\": base_url +'/discover?page={{page}}&side_type=13',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"爆更榜单\",\n        \"url\": base_url + '/discover?page={{page}}&side_type=15',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"巅峰榜单\",\n        \"url\": base_url +'/discover?page={{page}}&type=0',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"男频精选\",\n        \"url\": base_url + '/discover?page={{page}}&type=2',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"女频精选\",\n        \"url\":base_url + '/discover?page={{page}}&type=3',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    },\n    {\n        \"title\": \"每周推荐\",\n        \"url\": base_url +'/discover?page={{page}}&type=1',\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 0.27\n        }\n    }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunction generateUrl(k, k1, sort, status) {\n    return `${base_url}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n    datas.push({\n        \"title\": \"❦ \" + k + \"生频道 ❧\",\n        \"url\": \"\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": 1\n        }\n    });\n    for (let k1 in data[k]) {\n        datas.push({\n            \"title\": '༺༴ '+k1+' ༴༻',\n            \"url\": '',\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 1\n            }\n        });\n        datas.push({\n            \"title\": \"推荐排行\",\n            \"url\": generateUrl(k, k1, 0, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"评分排行\",\n            \"url\": generateUrl(k, k1, 1, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n        \n        datas.push({\n            \"title\": \"热门排行\",\n            \"url\": generateUrl(k, k1, 2, 'ALL'),\n            \"style\": {\n                \"layout_flexGrow\": 1,\n                \"layout_flexBasisPercent\": 0.27\n            }\n        });\n            }\n}\n\n\n\nJSON.stringify(datas);\n</js>",
    "enabledCookieJar": true,
    "bookUrlPattern": ""
  },
  {
    "bookSourceComment": "*By_聆听月与悦-2025/1/24\n*By_\n//把请求头换成自己的，书架就会同步，怎么获得？抓包一下猫眼app就有了(你得先登录)\n//有一些不同的api接口，把上面的源URL替换，接口就回换\n\n*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-\nhttp://api.myweipin.com\nhttp://api.lfdapengu.com\nhttp://api.jmlldsc.com\nhttp://api.lemiyigou.com",
    "bookSourceGroup": "《☃ 自用》",
    "bookSourceName": "💮猫眼看书",
    "bookSourceType": 0,
    "bookSourceUrl": "http://api.lfdapengu.com",
    "concurrentRate": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{\"title\": \"💮        ཽ 猫眼书架 ཽ        💮\",\"url\": \"http://api.lfdapengu.com/bookshelf\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1,\n\"js\": \"java.toast('正在加载发现页，请稍等！');\"\n}},\n{\"title\": \"↓    ༺ 男频榜单 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"必读榜\",\"url\": \"/module/rank?type=1&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"潜力榜\",\"url\": \"/module/rank?type=5&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"完本榜\",\"url\": \"/module/rank?type=2&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"更新榜\",\"url\": \"/module/rank?type=3&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"搜索榜\",\"url\": \"/module/rank?type=4&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"评论榜\",\"url\": \"/module/rank?type=6&channel=1&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 男频全部 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"玄幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=lejRej\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"武侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=nel5aK\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"都市\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mbk5ez\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"仙侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=vbmOeY\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"军事\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=penRe7\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"历史\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=xbojag\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"游戏\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mep2bM\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"科幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=zbq2dp\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"轻小说\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=YerEdO\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 男频完结 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"玄幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=lejRej&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"武侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=nel5aK&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"都市\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mbk5ez&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"仙侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=vbmOeY&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"军事\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=penRe7&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"历史\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=xbojag&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"游戏\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mep2bM&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"科幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=zbq2dp&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"轻小说\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=YerEdO&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 男频连载 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"玄幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=lejRej&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"武侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=nel5aK&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"都市\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mbk5ez&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"仙侠\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=vbmOeY&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"军事\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=penRe7&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"历史\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=xbojag&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"游戏\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=mep2bM&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"科幻\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=zbq2dp&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"轻小说\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=YerEdO&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 女频榜单 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"必读榜\",\"url\": \"/module/rank?type=1&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"潜力榜\",\"url\": \"/module/rank?type=5&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"完本榜\",\"url\": \"/module/rank?type=2&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"更新榜\",\"url\": \"/module/rank?type=3&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"搜索榜\",\"url\": \"/module/rank?type=4&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"评论榜\",\"url\": \"/module/rank?type=6&channel=2&page={{page}}\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 女频全部 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"现代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9avmeG\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"古代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=DdwRb1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"幻想言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=7ax9by\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"青春校园\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=Pdy7aQ\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"唯美纯爱\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=kazYeJ\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"同人衍生\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9aAOdv\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 女频完结 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"现代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9avmeG&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"古代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=DdwRb1&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"幻想言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=7ax9by&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"青春校园\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=Pdy7aQ&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"唯美纯爱\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=kazYeJ&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"同人衍生\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9aAOdv&isComplete=1\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"↓    ༺ 女频连载 ༻    ↓\",\"url\": \"\",\n\"style\": {\"layout_flexGrow\": 0,\n\"layout_flexBasisPercent\": 1\n}},\n{\"title\": \"现代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9avmeG&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"古代言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=DdwRb1&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"幻想言情\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=7ax9by&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"青春校园\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=Pdy7aQ&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"唯美纯爱\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=kazYeJ&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}},\n{\"title\": \"同人衍生\",\"url\": \"/novel?sort=1&page={{page}}&categoryId=9aAOdv&isComplete=0\",\n\"style\": {\"layout_flexGrow\": 1,\n\"layout_flexBasisPercent\": 0.29\n}}]",
    "header": "{\n\"User-Agent\": \"okhttp/4.9.2\",\n\"client-device\": \"0cdeb38dd0f2a381b06c0a02926ee317\",\n\"client-brand\": \"vivo\",\n\"client-version\": \"2.3.0\",\n\"client-name\": \"app.maoyankanshu.novel\",\n\"client-source\": \"android\",\n\"Authorization\": \"bearereyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9hcGkuanhndHp4Yy5jb21cL2F1dGhcL2xvZ2luYnltb2JpbGUiLCJpYXQiOjE3MzU2MTQ3NzEsImV4cCI6MTgyODkyNjc3MSwibmJmIjoxNzM1NjE0NzcxLCJqdGkiOiI1VEdjdXpoOHNSNVk5WlNjIiwic3ViIjo4MTEzMzQsInBydiI6ImExY2IwMzcxODAyOTZjNmExOTM4ZWYzMGI0Mzc5NDY3MmRkMDE2YzUifQ.-dT55vUMI-JJyfl3a9__Ii-DjxbyvnlOMoXWdG1c8JA\"\n}",
    "lastUpdateTime": "1738897252777",
    "loginUrl": "http://api.lfdapengu.com/auth/me",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.authorName",
      "canReName": "true",
      "coverUrl": "$.cover",
      "downloadUrls": "http://api.jxgtzxc.com/",
      "init": "$.data",
      "intro": "&nbsp;&nbsp;\n📕书名：{{$.novelName}}\n✏️作者：{{$.authorName}}\n🔥热度：{{$.hotInfo}}，{{$.readInfo}}人在读\n💮更新：共{{$.chapterNum}}章\n📃最新章节：{{$.lastChapter.chapterName}}\n⏳更新时间：{{$..decTime}}\n📖简介：{{$.summary##[\\/\\nN]*}}##[\\<\\>]*",
      "kind": "$..className",
      "lastChapter": "{{$.lastChapter.chapterName}}•{{$.lastUpdatedAt}}",
      "name": "$.novelName",
      "tocUrl": "/novel/{{$.novelId}}/chapters,{\n  \"js\": \"java.toast('正在加载目录页，请稍等！');\"\n}",
      "wordCount": "$.wordNum"
    },
    "ruleContent": {
      "content": "$.content",
      "nextContentUrl": "",
      "sourceRegex": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "$.authorName",
      "bookList": "$.data[*]",
      "bookUrl": "http://api.lfdapengu.com/novel/{{$.novelId}}?isSearch=1,{\n  \"js\": \"java.toast('正在加载详情页，请稍等！')\"\n}",
      "coverUrl": "$.cover",
      "intro": "$.summary",
      "kind": "http://api.lfdapengu.com/novel/{{$.novelId}}?isSearch=1<js>java.ajax(result)</js>$..className",
      "lastChapter": "",
      "name": "$.novelName",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "$.authorName",
      "bookList": "$.data[*]",
      "bookUrl": "http://api.lfdapengu.com/novel/{{$.novelId}}?isSearch=1,{\n  \"js\": \"java.toast('正在加载详情页，请稍等！')\"\n}",
      "checkKeyWord": "开局圣人修为，女帝成了前妻",
      "coverUrl": "$.cover",
      "intro": "$.summary",
      "kind": "{{$.averageScore}}分\n{{$..className}}\n连载中{{$.status}}已完结\n{{$.lastChapter.decTime||$.createdAt##\\s.*}}\n##连载中2|1已完结|连载中已完结",
      "name": "$.novelName",
      "wordCount": "$.wordNum"
    },
    "ruleToc": {
      "chapterList": "$.data.list[*]",
      "chapterName": "$.chapterName",
      "chapterUrl": "$.path\n@js:java.aesBase64DecodeToString(result,\"f041c49714d39908\",\"AES/CBC/PKCS5Padding\",\"0123456789abcdef\");##$##,{\n  \"js\": \"java.toast('正在解析正文中，请稍等！');\"\n}",
      "isPay": "",
      "isVip": "",
      "nextTocUrl": "",
      "updateTime": "{{$.updatedAt}} | {{$.wordNum}}字"
    },
    "searchUrl": "http://api.lfdapengu.com/search?keyword={{key}}&page={{page}},{\n  \"js\": \"java.toast('正在搜索中，请稍等！');\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "//\n\tdy@天天的鸟蛋蛋\n\t(自）\n<\t#\n\t账号：sxslib 密码：666666\n\t #>",
    "bookSourceGroup": "⌨📧网文",
    "bookSourceName": "云图有声(需登录)",
    "bookSourceType": 1,
    "bookSourceUrl": "https://library.yuntuys.com/",
    "customOrder": 908,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "特色::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=123&deptId=459&order=1&type=1&versionId=108\n文学::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=128&deptId=459&order=1&type=1&versionId=108\n教育::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=145&deptId=459&order=1&type=1&versionId=108\n人文::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=158&deptId=459&order=1&type=1&versionId=108\n军事::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=169&deptId=459&order=1&type=1&versionId=108\n生活::https://api-micro.yuntuys.com/ytys/v5/resource/class/1/99999999999?classId=178&deptId=459&order=1&type=1&versionId=108",
    "header": "{    'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36',\n    'Accept: application/json, text/plain, */*',\n    'Accept-Encoding: gzip, deflate, br, zstd',\n    'sec-ch-ua-platform: \"Android\"',\n    'authorization: YunTu.eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ7XCJkZXB0SWRcIjo0NTksXCJleHRlbmRcIjp7fSxcIm5pY2tuYW1lXCI6XCLpmZXopb_nnIHlm77kuabppoYxXCIsXCJvbmxpbmVcIjp0cnVlLFwidXNlcklkXCI6NTYyNzAxfSIsInNhbHQiOiJzYWx0IiwiZXhwIjoxNzM2NTk5NDUwLCJpYXQiOjE3MzQwMDc0NTB9.-8YXfXFjcRl68JCLoz2o7wXUTAQXU5uFedYwxLuUfG0',\n    'sec-ch-ua: \"Android WebView\";v=\"131\", \"Chromium\";v=\"131\", \"Not_A Brand\";v=\"24\"',\n    'sec-ch-ua-mobile: ?1',\n    'origin: https://library.yuntuys.com',\n    'x-requested-with: cn.mujiankeji.mbrowser',\n    'sec-fetch-site: same-site',\n    'sec-fetch-mode: cors',\n    'sec-fetch-dest: empty',\n    'referer: https://library.yuntuys.com/',\n    'accept-language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',\n    'priority: u=1, i'}",
    "lastUpdateTime": "1739167195327",
    "loginUi": "",
    "loginUrl": "https://library.yuntuys.com/login",
    "respondTime": 2484,
    "ruleBookInfo": {
      "author": "|{$..author}|{$..anchor}|",
      "intro": "$..summary##<p>.*",
      "kind": "{$..label}",
      "name": "$..name",
      "tocUrl": "https://api-micro.yuntuys.com/ytys/v5/sequel/pc/page/1/10?deptId=459&history=true&resourceId={$..id}&sortBy=ASC&type=1&versionId=108"
    },
    "ruleContent": {
      "content": "$..source"
    },
    "ruleExplore": {
      "author": "|{$..author}|{$..anchor}|",
      "bookList": "$..list[*]",
      "bookUrl": "https://api-micro.yuntuys.com/ytys/v5/resource/get/{$..id}?deptId=459&versionId=108",
      "coverUrl": "cover",
      "intro": "summary",
      "kind": "{$..label}",
      "name": "$..name"
    },
    "ruleSearch": {
      "author": "|{$.author}|{$.anchor}|",
      "bookList": "$..list[*]",
      "bookUrl": "https://api-micro.yuntuys.com/ytys/v5/resource/get/{{$.id}}?deptId=459&versionId=108",
      "checkKeyWord": "旧事与新说：我的父亲冯友兰",
      "coverUrl": "cover",
      "intro": "summary",
      "name": "name"
    },
    "ruleToc": {
      "chapterList": "$..list[*]",
      "chapterName": "{$..rank} {$..name}",
      "chapterUrl": "https://api-micro.yuntuys.com/ytys/v5/sequel/pc/get/{$..id}?deptId=459&versionId=108",
      "formatJs": ""
    },
    "searchUrl": "https://api-micro.yuntuys.com/ytys/v5/resource/search/{{page}}/6?deptId=459&search={{key}}&type=1&versionId=108",
    "weight": 0
  },
  {
    "bookSourceComment": "//2025.02.05\n//by 天天的鸟蛋蛋 \n//正文 webView by 关耳 正文 解密by==  by水镜绘纱\n//发现 by 另一个书友圈\n// 设置书源变量 默认为0 0是调用解密\n//1是webView加载 下面的代码勿动\ncontent = java.getElement(\"@@class.content\");\nscript = result.match(/\\<script\\>var c=\"[\\s\\S]+?defer=\"defer\"\\>\\<\\/script\\>/)[0];\nscript = content+script;\n\nresult = java.webView(script,\"http://www.xinjianpan.com\",\"\")",
    "bookSourceName": "新键盘小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.xinjianpan.com",
    "customOrder": -99041,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[\n  {\n    \"title\": \"🌊 热门 🌊\",\n    \"url\": \"\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"title\": \"周点击\",\n    \"url\": \"/rank/weekvisit/?page={{page}}\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"月点击\",\n    \"url\": \"/rank/monthvisit/?page={{page}}\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"总点击\",\n    \"url\": \"/rank/allvisit/?page={{page}}\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.25\n    }\n  },\n  {\n    \"title\": \"🌊 分类 🌊\",\n    \"url\": \"\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 1\n    }\n  },\n  {\n    \"title\": \"玄幻\",\n    \"url\": \"/sort/xuanhuan-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"仙侠\",\n    \"url\": \"/sort/xianxia-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"都市\",\n    \"url\": \"/sort/dushi-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"历史\",\n    \"url\": \"/sort/lishi-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"网游\",\n    \"url\": \"/sort/wangyou-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"科幻\",\n    \"url\": \"/sort/kehuan-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"灵异\",\n    \"url\": \"/sort/lingyi-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"言情\",\n    \"url\": \"/sort/yanqing-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\": 0.2\n    }\n  },\n  {\n    \"title\": \"其他\",\n    \"url\": \"/sort/qita-{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": -1,\n      \"layout_flexBasisPercent\": 0.205\n    }\n  },\n  {\n    \"title\": \"全本\",\n    \"url\": \"/quanben/sort/{{page}}.html\",\n    \"style\": {\n      \"layout_flexGrow\": -1,\n      \"layout_flexBasisPercent\": 0.205\n    }\n  }\n]",
    "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; U; Android 14; zh-cn; M2102K1AC Build/UKQ1.231207.002) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/109.0.5414.118 Mobile Safari/537.36 MQQBrowser/10.1.0\"}",
    "lastUpdateTime": "1738854811604",
    "respondTime": 19937,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "intro": "[property$=description]@content",
      "kind": "[property~=status|update_time|category]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "[property$=book_name]@content",
      "tocUrl": "text.更多章节@href"
    },
    "ruleContent": {
      "content": "<js>\nz = source.getVariable().split(\",\");\nif(!(parseInt(z[0])>0)){\n  let regex = /var c=\"([^\"]*)\"/;\nlet dd = result.match(regex)[1]\n\nlet j = java.base64Decode(dd);\n  //java.log(j)\n  jja=String(j).replace(/^[^-]*-/,\"-\")\n  if(/=/.test(jja)){jj=jja.replace(/=[^=]*$/,\"\");}else{jj=jja.replace(/_[^_]*$/,\"\");}\n  \nm=jj.replace(/-/g,\"PHA+\").replace(/_/g,\"8L3A+\");\nn=java.getString(\"@@#chaptercontent@p@html\");\nn+\tjava.base64Decode(m)\n\n  \n}else if(parseInt(z[0])){\n  src=eval(String(source.bookSourceComment))\nresult=java.getString(\"id.chaptercontent@html\",src)\nresult\n}\n\n</js>\n",
      "nextContentUrl": "##onclick=\"location.href='([^\"]+_\\d+.html)'\">下一章</a>##$1###",
      "replaceRegex": "##天才一秒记住【.*】地址.*|.*退出阅读模式即可，谢谢！|小说推荐：.*",
      "title": "",
      "webJs": ""
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "dd@a@text",
      "bookList": "dl:nth-child(n+1)",
      "bookUrl": "dt@a@href",
      "checkKeyWord": "斗破苍穹",
      "coverUrl": "img@data-src",
      "intro": "dd.0@text",
      "kind": "dd@span.0:-1@text",
      "name": "dt@a@text",
      "wordCount": "dd@span.1@text"
    },
    "ruleToc": {
      "chapterList": ".all@ul@li@a",
      "chapterName": "text",
      "chapterUrl": "onclick##.*\\'(.*)\\'##$1###",
      "nextTocUrl": "option@value"
    },
    "searchUrl": "/search/?searchkey={{key}}",
    "weight": 0
  },
  {
    "bookSourceName": "全本小说网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.quanben.io",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "玄幻::/c/xuanhuan_{{page}}.html\n都市::/c/dushi_{{page}}.html\n言情::/c/yanqing_{{page}}.html\n穿越::/c/chuanyue_{{page}}.html\n青春::/c/qingchun_{{page}}.html\n仙侠::/c/xianxia_{{page}}.html\n灵异::/c/lingyi_{{page}}.html\n悬疑::/c/xuanyi_{{page}}.html\n历史::/c/lishi_{{page}}.html\n军事::/c/junshi_{{page}}.html\n游戏::/c/youxi_{{page}}.html\n竞技::/c/jingji_{{page}}.html\n科幻::/c/kehuan_{{page}}.html\n职场::/c/zhichang_{{page}}.html\n官场::/c/guanchang_{{page}}.html\n现言::/c/xianyan_{{page}}.html\n耽美::/c/danmei_{{page}}.html\n其它::/c/qita_{{page}}.html",
    "lastUpdateTime": "1738721183770",
    "respondTime": 180000,
    "ruleBookInfo": [],
    "ruleContent": {
      "content": "#content p@text"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": "[itemprop=\"author\"]@text",
      "bookList": ".box .list2",
      "bookUrl": "h3 a@href##$##list.html",
      "coverUrl": "img@src",
      "intro": "[itemprop=\"description\"]@text",
      "name": "h3 a@text"
    },
    "ruleToc": {
      "chapterList": "@js:\nfunction load_more(book){\n  return `/index.php?c=book&a=list.jsonp&callback=${callback}&book_id=${book}&b=${base64(callback)}`\n}\n\nfunction base64(_str){var staticchars=\"PXhw7UT1B0a9kQDKZsjIASmOezxYG4CHo5Jyfg2b8FLpEvRr3WtVnlqMidu6cN\";var encodechars=\"\";for(var i=0;i<_str.length;i++){var num0=staticchars.indexOf(_str[i]);if(num0==-1){var code=_str[i]}else{var code=staticchars[(num0+3)%62]}var num1=parseInt(Math.random()*62,10);var num2=parseInt(Math.random()*62,10);encodechars+=staticchars[num1]+code+staticchars[num2]}return encodechars}\n\nconst callback = result.match(/var callback='(.*?)'/)?.[1]\nconst more = result.match(/\"(load_more\\(.*?\\))\"/)?.[1]\nlet url = eval(more)\nurl = source.getKey() + url + \",\" + JSON.stringify({headers:{\n\t \"User-Agent\": \"Mozilla/5.0 (iPhone; CPU iPhone OS 16_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.4 Mobile/15E148 Safari/604.1\",\n  \"Referer\": baseUrl\n}})\nlet html = java.ajax(url)\nhtml = html.match(/\\((\\{.*\\})\\)/)?.[1]\nhtml = JSON.parse(html).content\nlet list = java.getElements(\".list3\")\njava.setContent(html)\nlet moreList = java.getElement(\".list3\")\nlist = Array.from(list).map(String)\nmoreList = String(moreList)\nlist.splice(1, 0, moreList)\njava.setContent(list.join(\"\"))\n java.getElements(\"li\")",
      "chapterName": "span@text",
      "chapterUrl": "a@href"
    },
    "searchUrl": "/index.php?c=book&a=search&keywords={{key}}",
    "weight": 0
  },
  {
    "bookSourceName": "爱爱中文网",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.i25zw.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": false,
    "exploreUrl": "",
    "header": "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
    "lastUpdateTime": "1738813896122",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "p:nth-child(2) > a@text",
      "coverUrl": "img@src",
      "init": "",
      "intro": ".introtxt@text##简介:",
      "kind": "#info > p:nth-child(3)@text##\\(\\)",
      "lastChapter": "p:nth-child(6) > a@text",
      "name": "h1@text",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "id.content@html##投推荐票|上一章|章节目录|下一章|加入书签|返回书架",
      "replaceRegex": "",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": [],
    "ruleReview": [],
    "ruleSearch": {
      "author": "tag.span@text##作者：",
      "bookList": "id.alist@id.alistbox",
      "bookUrl": "class.title@tag.h2@tag.a.0@href",
      "checkKeyWord": "我的",
      "coverUrl": "tag.img@src",
      "intro": "class.intro@text",
      "kind": "tag.p.2@text##分类：",
      "lastChapter": "class.sys@tag.li@text##最新更新：",
      "name": "class.title@tag.h2@tag.a.0@text"
    },
    "ruleToc": {
      "chapterList": "id.list@tag.dd",
      "chapterName": "tag.a@text",
      "chapterUrl": "tag.a@href"
    },
    "searchUrl": "/search.html,{\nmethod: \"post\",\nbody: \"searchkey={{key}}&searchtype=all&Submit=\"\n}",
    "weight": 0
  },
  {
    "bookSourceComment": "┍　　　说明　　　作者：洛娅橙　　┒\n├────────────────┤\n│①书源默认优化正文加载，可能会导│\n│致下载书籍异常，在该登录界面点击│\n│启用下载即可。　　　　　　　　　│\n│②支持屏蔽书籍为黑名单，之后在搜│\n│索和发现不再显示屏蔽后的书籍（误│\n│点击后可再次点击进行恢复）。　　│\n│③输出名单到日志需要在软件其它设│\n│置里开启记录日志功能。　　　　　│\n│④登录界面开启同步书架功能，在详│\n│情页下拉刷新两次或书架刷新，会自│\n│动同步至网站书架　　　　　　　　│\n│⑤正则书名黑名单填写示例：　　　│\n│“/母亲|第\\d+部/”　　　　　　　　│\n├────────────────┤\n│　　　　　　　　　　　　　　　　│\n│·强烈建议使用阅读最新测试版　　│\n└────────────────┘\n┍　　　　书源作者：洛娅橙　　　　┒\n├───┬────────────┤\n│！免责│本书源只提供代码进行技术│\n│！声明│交流，请于２４小时后删除│\n├───┴────────────┤\n│可在书源登录界面进行登录。　　　│\n│搜索关键词输入示意：　　　　　　│\n│“我的”、“书名：系统”、“作者│\n│：棺材”、“标签：母女”。　　　│\n│书籍变量可用来进行交互，详情查看│\n│相应界面的变量说明　　　　　　　│\n│　　　　　　　　　　　　　　　　│\n│❗❗❗如果你正在使用阅读正式版 │\n│非常遗憾书源会进行报错，很多功能│\n│在正式版无法支持实现。　　　　　│\n└────────────────┘\n___________________________________________\n1.2.8版，新增书籍黑名单，日志不再记录在书源\n1.2.6版，详情页刷新，无新内容不刷新目录\n八叉发布页：https://8xsk.org\nip地址查看：https://iplark.com",
    "bookSourceGroup": "🙈",
    "bookSourceName": "🌈八叉书库",
    "bookSourceType": 0,
    "bookSourceUrl": "洛娅橙-八叉书库",
    "bookUrlPattern": "https://www.(?:\\d+\\.xyz|8xbook.+)/book/\\d+\\.html",
    "concurrentRate": "1000",
    "coverDecodeJs": "",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "@js:\nlet banben=\"1.3.2\";\nftsm();\neval(String(source.loginUrl));\nlet surl = String(source.getVariable()).replace(/\\/$/,'');\n\nvar obj = {\n\t最近更: {\n\t\t\"url\": \"/sort/0/{{page}}.html\",\n\t\t\"fg\": 9},\n\t\t'新(肉)':{\n\t\t\"url\": \"/sort/7/{{page}}.html\",\n\t\t\"fg\": 1},\n\t最近入库: {\n\t\t\"url\": \"/top/postdate/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t最近完: {\n\t\t\"url\": \"/modules/article/articlelist.php?fullflag=1&page={{page}}\",\n\t\t\"fg\": 9,\n\t\t\"wrap\": true},\n\t\t'结(肉)':{\n\t\t\"url\": \"/modules/article/articlelist.php?sortid=7&fullflag=1&page={{page}}\",\n\t\t\"fg\": 1},\n\t签约新书: {\n\t\t\"url\": \"/top/signtime/{{page}}.html\",\n\t\t\"fg\": 10},\n\t\t\n\t字数榜: {\n\t\t\"url\": \"/top/words/{{page}}.html\",\n\t\t\"wb\": true},\n\t收藏榜: {\n\t\t\"url\": \"/top/goodnum/{{page}}.html\"},\n\t新书榜: {\n\t\t\"url\": \"/top/newhot/{{page}}.html\"},\n\t\t\n\t总点击: {\n\t\t\"url\": \"/top/allvisit/{{page}}.html\",\n\t\t\"wb\": true},\n\t月点击: {\n\t\t\"url\": \"/top/monthvisit/{{page}}.html\"},\n\t周点击: {\n\t\t\"url\": \"/top/weekvisit/{{page}}.html\"},\n\t\t\n\t总推荐: {\n\t\t\"url\": \"/top/allvote/{{page}}.html\",\n\t\t\"wb\": true},\n\t月推荐: {\n\t\t\"url\": \"/top/monthvote/{{page}}.html\"},\n\t周推荐: {\n\t\t\"url\": \"/top/weekvote/{{page}}.html\"},\n\t\t搜索: {\n\t\t\turl: \t`{{\n\t\t\t\tif (page == 1) {\n\t\t\t\t\ttry {\n\t\t\t\t\tsvg='<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\"><text fill=\"#a2a9b6\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\"><tspan x=\"50%\" dy=\"30%\" font-size=\"100\">请输入搜索关键词</tspan><tspan x=\"50%\" dy=\"50%\" font-size=\"50\">此处搜索不支持完整书名</tspan></text></svg>';\n\tsvg=java.base64Encode(svg);\n\tkeyy=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\n\t\t\t\t\t} catch(err) {keyy='系统';\n\t\t\t\t\tPackages.java.lang.Thread.sleep(500);\n\t\t\t\t\tjava.toast('使用默认关键词“系统”');}\n\t\t\t\t\tsource.put('keyy',keyy);\n\t\t\t\t\t\t}\n\t\t\t\telse keyy = source.get('keyy');\n\t\t\t\turl =\t'${surl}'+'/modules/article/search.php?searchkey='+keyy+'&searchtype=all&page='+page;\n\t\t\t\turl\n\t\t\t}}`,\n\t\t\t\"fb\": 0.3,\n\t\t\t\"wb\": true},\n\t我的书架: {\n\t\t\"url\": `{{\n\t\t\tif (page == 1) {\n\t\tlet ck = source.getLoginHeader();\n\t\tck ? '${surl}'+'/modules/article/bookcase.php' : java.longToast('请登录账号');\n\t\t} else 'http://127.0.0.1/';\n\t\t}}`,\n\t\t\"fb\": 0.3}\n\t}\n\nvar sort = [];\npush = (title, url, size, wrap, cc) => sort.push({\n    \"title\": title,\n    \"url\": url.startsWith(\"{{\") ? url : url ? surl + url : \"\",\n    \"style\": {\n      layout_flexGrow: size || 1,\n      layout_flexBasisPercent: cc || -1,\n      layout_wrapBefore: wrap ? wrap : false\n     }\n  });\n\nfor (x in obj) {\npush(x, obj[x].url, obj[x].fg, obj[x].wb, obj[x].fb);\n}\n\n//版本号\npush(\"版本号:\"+banben+\"　点我刷新地址\", `{{if(page==1) {cache.put('8xbl1', source.getVariable()); source.setVariable(''); gengxin(); eval(String(source.loginUrl)); if (java.get(\"bj1\") ==1) {r='书源地址更新成功&#10;请返回发现页，然后长按本书源的名称&#10;在弹出的菜单中点击刷新按钮\" zuozhe=\"成功'} else if (java.get(\"bj1\") ==2) {r='获取地址失败&#10;可能原因:①被拉黑(稍后再试，或主动换ip)②发布页有变动(更新书源版本)\" zuozhe=\"失败'} else {r='该地址已经是最新了呢&#10;如果书源依旧异常&#10;可以反馈给我\" zuozhe=\"重复'} java.put('bj1', 0); java.put('bj2', r);} 'http://127.0.0.1/'+page}}`, 1, true);\npush(\"测速/更新\",`{{eval(String(source.loginUrl));gengxin(); Packages.java.lang.Thread.sleep(100); ceshi(); 'http://127.0.0.1/'}}`, 1);\n\nJSON.stringify(sort);",
    "header": "@js:\n(()=>{\n    let ck = source.getLoginHeader() || '';   \n    let headers = {\n    \t'User-Agent': ua,\n    \t'x-requested-with': x_r_w,\n    \t'sec-ch-ua': s_c_u,\n    \t'sec-ch-ua-platform': s_c_u_p,\n    \t'cookie': ck\n    \t };\n    \t return JSON.stringify(headers);\n})();",
    "jsLib": "ua = 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/131.0.2903.77';\nx_r_w = 'com.microsoft.emmx';\ns_c_u_p = 'Android';\ns_c_u = `\"Not(A:Brand\";v=\"99\", \"Android WebView\";v=\"133\", \"Chromium\";v=\"133\"`;\n\nfunction hexToInt(e, t) {\n        var r = e.substr(t, 2);\n        return parseInt(r, 16);\n    }\nfunction decodeEmail(n, c) {\n    var o = \"\", a = hexToInt(n, c), i = c + 2;\n    for (i; i < n.length; i += 2) {\n        var l = hexToInt(n, i) ^ a;\n        o += String.fromCharCode(l);\n    }\n        o = decodeURIComponent(escape(o));\n        return o\n}\n\n\nfunction ftsm(){\n\tconst {java, source} = this;\n\tlet nm = source.get('8xftn');\n\tif(nm==''||nm<0) {nm=5;}\nif(nm>0) {\n\tnm--;\n\tsource.put('8xftn',nm);\n\tlet ss = String(source.bookSourceComment).match(/\\n┍[^┘]+┘/)[0];\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);\n\tPackages.java.lang.Thread.sleep(2000);\n\tjava.longToast(ss+'\\n该弹窗剩余次数：'+nm);}\n}\n\nfunction gengxin(){\nconst {java, source} = this;\n\tlet url0='https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json?browser_history=0&page=1&per=3';\n\tlet rr0=java.get(url0,{'User-Agent': 'Mozilla/5.0 (Linux; Android 14)','X-Requested-With': 'XMLHttpRequest'}).body();\n\tlet \tgxlrr = com.jayway.jsonpath.JsonPath.read(rr0, '$.list[0:3].title');\n\tlet [gxlr, gxlr2, gxlr3] = gxlrr;\n\tlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\n\tgxlr=String(gxlr).split(/^([^\\-]+)-/);\n\tgxlr[0]=='' ? '' : gxlr=['','0',gxlr[0]];\n\tlet gxts;\n\tif (gxlr[1]>banben){gxts=['更新','0,140,186'];}\n\telse {gxts= ['导入','76,175,80'];};\n\tlet htm = `data:text/html;charset=utf-8,<html>\n<head>\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n<style>\ntable {\n\ttext-align: center;\n\tmargin: 0 auto;\n\t}\n.ann {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 50vh;\n\t}\nbutton {\n\tbackground-color: rgb(${gxts[1]});\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 4px;\n\theight: 6vh;\n\twidth: 30vw;\n\toverflow: hidden;\n\t}\nbutton span {\n  cursor: pointer;\n  display: inline-block;\n  position: relative;\n  transition: 0.4s;\n}\nbutton span:after {\n  content: '>';\n  position: absolute;\n  opacity: 0;\n  top: 0;\n  right: 30px;\n  transition: 0.2s;\n}\nbutton:active span {\n  padding-right: 20px;\n}\nbutton:active span:after {\n  opacity: 1;\n  right: -40px;\n}\n</style>\n</head>\n<body>\n<table border=\"1\" cellspacing=\"0\">\n<th colspan=\"2\">最新日志：${gxlr[2]}</th>\n<tr>\n<td>仓库版本：${gxlr[1]}</td>\n<td>本地版本：${banben}</td>\n</tr>\n<tr>\n<td colspan=\"2\" style=\"text-align: left;\">往期日志：${gxlr2}<br>　　　　　${gxlr3}</td>\n</tr>\n</table>\n<div class=\"ann\">\n<a href=\"legado://import/Source?src=https://gitee.com/lyc486/yuedu2/raw/main/书源/八叉/8x.json\">\n<button><span>${gxts[0]}</span></button>\n</a>\n</div>\n</body>\n</html>`;\nif(typeof this.book=='undefined'||gxts[0]=='更新') java.startBrowser(htm,'更新');\r\n}\n\nfunction tbshujia(iuu,iid){\nconst {java, source} = this;\nlet iuux=iuu+'/modules/article/addbookcase.php';\nlet iuuy=String(iuu+'/book/'+iid+'.html'); //需要转化否则报错\nlet tm = new Date().getTime();\nlet body = `bid=${iid}&ajax_request=${tm}`;\nlet ck = source.getLoginHeader();\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': iuuy,\n        'cookie': ck\r\n    };\nlet by = java.post(iuux,body,headers).body();\njava.longToast('\\n'+this.book.name+'：\\n'+by);\n}",
    "lastUpdateTime": "1738768461236",
    "loginCheckJs": "//java.toast('登录检查:'+result);\nlet code = result.code();\nif (code == 403) {\n\tjava.toast('\\n访问被拒绝');\n\t}\nresult",
    "loginUi": "[\n    {\n        name: \"账号\",\n        type: \"text\"\n    },\n    {\n        name: \"密码\",\n        type: \"password\"\n    },\n    {\n        name: \"💍注册\",\n        type: \"button\",\n        action: \"web()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"🔺登　录🔺\",\n        type: \"button\",\n        action: \"Login()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"♤登出\",\n        type: \"button\",\n        action: \"re()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n    \tname: \"💬说明\",\n    \ttype: \"button\",\n    \taction: \"sm()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    \t},\n    \t{\n        name: \"🧾延迟测试\",\n        type: \"button\",\n        action: \"ceshi()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"⏭️启用下载\",\n        type: \"button\",\n        action: \"downl()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐打开本书↓\",\n        type: \"button\",\n        action: \"webb()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    },\n    \t{\n        name: \"❌屏蔽\",\n        type: \"button\",\n        action: \"hmd()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🧹清空\",\n        type: \"button\",\n        action: \"hmdre()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"书名\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🆕版本更新\",\n        type: \"button\",\n        action: \"gengxin()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"♻️同步书架\",\n        type: \"button\",\n        action: \"shujia()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    \t{\n        name: \"🌐书架\",\n        type: \"button\",\n        action: \"webbs()\",\n        \"style\": {\n            \"layout_flexGrow\": 1,\n            \"layout_flexBasisPercent\": -1\n        }\n    },\n    {\n        name: \"正则书名黑名单\",\n        type: \"text\"\n    },\n    \t{\n        name: \"🌐查看日志\",\n        type: \"button\",\n        action: \"gitee()\",\n        \"style\": {\n            \"layout_flexGrow\": 0,\n            \"layout_flexBasisPercent\": -1,\n            \"layout_wrapBefore\": true\n        }\n    }\n]",
    "loginUrl": "nn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\nlet rr=java.connect('https://www.8xsk.org/');\nlet cd=rr.code();\nlet ur=(rr.body().match(/电脑主站[^\"]+\\\"([^\"]+)\\\"/)||['',''])[1];\nlet x = cache.get('8xbl1');\n\nif (cd != 200||ur == '') {\n\tjava.longToast(\"书源地址获取失败💔\"+ur);\n\tsource.setVariable(x);\n\tjava.put(\"bj1\", 2);\n\t}\nelse {\n\tif (ur != x) {\n\t\t\tsource.setVariable(ur);\n\t\t\tjava.log(\"登录URL：源地址获取成功\");\n\t\t\tcache.put('8xbl1',ur);\n\t\t\tjava.put(\"bj1\", 1);}\n\t\telse {\n\t\t\tsource.setVariable(x);\n\t\t\tjava.put(\"bj1\", 0);}\n\t}\n}\n\nfunction login(){}\r\nfunction Login(){\n    let Info = source.getLoginInfoMap()||{};\r\n    let url = nn+'/login.php';\r\n    let un = Info['账号'] = result['账号'];\r\n    let pw = Info['密码'] = result['密码'];\r\n    let time = new Date().getTime();\n    let body = `username=${un}&password=${pw}&usecookie=1&submit=&act=login`;\n    let weiba = `?do=submit&jumpurl=${nn}`;\r\n    let headers = {\r\n        'referer': nn,\n        \t'user-agent': ua,\n        \t'x-requested-with': x_r_w,\n        \t'sec-ch-ua-platform': s_c_u_p\r\n    };\n    if (un!=''&&pw!='') {\n    cookie.removeCookie(nn);\n    let cookie1 = java.post(url+ weiba,body,headers).cookies();\n    let ck = cookie.mapToCookie(cookie1);\n    //处理cookie格式\r\n    source.putLoginHeader(ck);\n    cookie.removeCookie(nn);\n    let i = String(ck).includes(\"jieqiUserInfo\");\n    //会存入登录信息，无需点✓\r\n    if (i) {source.putLoginInfo(JSON.stringify(Info));java.toast(\"登录成功，VIP模式💎\");}\r\n    else java.toast(\"登录失败，访客模式🔒\");\n    } else {java.toast(\"💔账号和密码不能为空\");}\n\r\n}\r\n\r\nfunction web(){\r\n    let url = nn.replace('www.','') + '/register.php';\n    cookie.removeCookie(url);\r\n    java.startBrowser(url, '八叉注册');\r\n}\n\nfunction ceshi(){\n\t['　　　','·　　','··　','···'].forEach((_,i) => {java.toast('\\n\\n测试中'+_+'\\n');Packages.java.lang.Thread.sleep((3-i)*100);}); //然并卵的动画(但是好看)\n\ttry {\n  const startTime=new Date().getTime();\n\tjava.head(nn,{\t'user-agent': ua});\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime) / 1000;\n\tspeed = speed.toFixed(2);\n\tjava.toast('\\n\\n延迟：'+speed+'秒\\n');\n\t} catch(err) {java.longToast(err);}\n\r\n}\n\n\r\nfunction re(){\n\t//输出一份数据到日志，以备需\n\tjava.log('\\n账号：'+result['账号']+'\\n密码：'+result['密码']);\n\t//消除相应数据\r\n    cookie.removeCookie(nn);\n    source.removeLoginHeader();\n    source.removeLoginInfo();\n    cache.deleteMemory('8xid');\n    java.toast(\"回到访客模式🔒\");\r\n}\n\r\nfunction sm(){\nlet banben =   String(source.exploreUrl).match(/let banben=\"([\\d\\.]+)\"/)[1];\nlet ss = String(source.bookSourceComment).match(/^[^┘]+┘/);\nlet cki = String(source.getLoginHeader()).includes(\"jieqiUserInfo\");\n    let ms= \"访客模式🔒\";\n    if (cki != '') {\r\n        ms = \"VIP模式💎\";\r\n    }\r\nlet tt = `\n网址：${nn}　　 \n模式：${ms}　　　　　　   \n版本：${banben}　　　　　　　　　　\n\n${ss}`;\n    java.longToast(tt);\r\n}\n\nfunction webb(){\n\tlet id = cache.getFromMemory('8xid');\n  if (id) {\n  \tid=Object.keys(id)[0];\n  \tlet nnm=nn.replace('www.','');\n  \tlet ck=source.getLoginHeader()||'';\n   cookie.replaceCookie(nnm,ck);\n   java.startBrowser(`${nnm}/book/${id}.html`,'八叉');\n   } else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n}\n\nfunction webbs(){\n\t\tlet nnm=nn.replace('www.','');\n  \tlet ck=source.getLoginHeader()||'';\n   cookie.replaceCookie(nnm,ck);\n   java.startBrowser(`${nnm}/modules/article/bookcase.php`,'书架');\n}\n\nfunction hmd(){\n\tlet id = cache.getFromMemory('8xid');\n\tif (id) {\n\tlet hmd = cache.getFile('8xhmd')||'{}';\n\thmd = JSON.parse(hmd);\n\tlet idd = Object.keys(id)[0];\n\tif (idd in hmd) {\n\t\tdelete hmd[idd];\n\t\tcache.putFile('8xhmd',JSON.stringify(hmd),0);\n\t\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n移除黑名单😅');\n\t\t}\telse {\n\thmd = Object.assign({},hmd,id);\n\tcache.putFile('8xhmd',JSON.stringify(hmd),0);\n\tjava.longToast('\\n已将书籍：'+Object.values(id)[0]+'\\n加入黑名单');}\n\t\n\t} else {java.toast('\\n请在书籍界面点击或刷新书籍');}\n\t\n}\n\nfunction hmdre(){\n\tlet hmd=cache.getFile('8xhmd')||'{}';\n\thmd=JSON.parse(hmd);\n\tlet ss=Object.entries(hmd);\n\nlet svg=`<svg width=\"990\" height=\"300\" xmlns=\"http://www.w3.org/2000/svg\">\n<style>\ntext {\n\twhite-space: pre;\n\tword-wrap: break-word;}\n</style>\n<text fill=\"#a2a9b6\" text-anchor=\"middle\" dominant-baseline=\"middle\" stroke=\"#000000\" stroke-width=\"1\" font-weight=\"bold\">\n<tspan x=\"50%\" dy=\"30%\" font-size=\"100\">\n是否清空黑名单<tspan font-size=\"30\">（${ss.length}）</tspan>\n</tspan>\n<tspan x=\"42%\" dy=\"25%\" font-size=\"60\">输入“确认”进行清空</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入“名单”打印一份名单到日志</tspan>\n<tspan x=\"50%\" dy=\"20%\" font-size=\"50\">输入书籍ID单独移出黑名单<tspan font-size=\"30\">(名单查看)</tspan></tspan>\n</text>\n</svg>`;\nsvg=java.base64Encode(svg);\n\ntry {\n//拦截验证码报错\nlet ysr=java.getVerificationCode('data:image/svg+xml;base64,'+svg);\nPackages.java.lang.Thread.sleep(100);\nif (ysr=='确认') {cache.delete('8xhmd');java.toast('\\n已清空');}\nelse if (ysr=='名单') {java.log('\\n💔8x黑名单：\\n'+ss.join('\\n'));}\nelse if (/\\d{3,}/.test(ysr)) {\n\tif (ysr in hmd) {\n\tjava.toast('\\n已将书籍：'+hmd[ysr]+'\\n移除黑名单');\n\tdelete hmd[ysr];\n\tcache.putFile('8xhmd',JSON.stringify(hmd),0);\n\t} \telse {java.toast('移出失败');}\n\t}\n} catch(err) {}\n\n}\n\nfunction downl() {\nlet dn = source.get('8xdn');\nif(dn!=1) {source.put('8xdn',1);java.toast('已支持下载');}\nelse {source.put('8xdn',0);java.toast('已优化加载');}\n\t}\nfunction shujia() {\nlet dn = source.get('8xsj');\nif(dn!=1) {source.put('8xsj',1);java.toast('🟢已启用同步网站书架');}\nelse {source.put('8xsj',0);java.toast('⚫已关闭同步网站书架');}\n\t}\n\nfunction gitee() {\njava.startBrowser(`https://gitee.com/lyc486/yuedu2/commits/main/书源/八叉/8x.json,{\n\t\t'headers': {\n\t\t\t'User-Agent': 'Mozilla/5.0 (Linux; Android 14)'}\n\t\t\t}`,'日志');\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "",
      "canReName": "",
      "coverUrl": "class.divbox cf@img@src",
      "init": "<js>\n//搜索跳详情重定向(含已放书架的http)处理，新版本有优化，但data依旧需要保持\nlet i = String(book.bookUrl).includes('https:/');\nif (i) {\n\tbook.bookUrl = `data:;base64,${java.base64Encode(baseUrl)},{'type':''}`;\n\t}\n\n//告诉目录是由详情来的\njava.put('sx1',1);\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\n\n//发书评功能\nlet bkbl = book.getVariable(\"custom\");\n//解书籍地址\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet bkid = (mlj.match(/book\\/(\\d+)/)||['',''])[1];\n//↑获取书id\njava.put('bkid',bkid);\n\nif (bkbl=='🔒'||bkbl=='') {\n//带🔒或书籍变量为空会经过这里\n//处理加书架功能\nlet sj=java.get('sj');\nlet sj2=source.get('8xsj'); //启用同步的标识\nif (sj=='2'&&sj2=='1') {java.put('sj',3);tbshujia(nn,bkid);}\nelse if (sj=='1') {java.put('sj',2);}\n\n\t}\nelse if (bkbl=='目录') {\n\t//清空最新章储存强制刷新目录\n\tjava.put('8xzx','');\n\t//清空输入的书籍变量\n\tbook.putCustomVariable('');}\nelse {\nlet pfurl = nn+'/modules/article/rating.php';\nlet plurl = nn+'/modules/article/reviews.php';\nlet ck = source.getLoginHeader();\nlet cki = ck.match(/UserToken%3D([^%]+)/)||['',''];\ntk = cki[1];\n//↑获取链接和tk\n\nif (bkid != '' && tk != '') {\nlet tm = new Date().getTime();\nlet bkfs = (bkbl.match(/^(\\d|10)分$/) || ['','0'])[1];\nlet pfbody = `score=${bkfs}&id=${bkid}&ajax_request=${tm}`;\nlet plbody = `ptitle=&act=newpost&jieqi_token=${tk}&Submit=&pcontent=${bkbl}&aid=${bkid}&ajax_request=${tm}`;\n\nlet headers = {\r\n        'User-Agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua-platform': s_c_u,\r\n        'referer': mlj,\n        'cookie': ck\r\n    };\nif (bkfs != 0) {url=pfurl;body=pfbody;}\nelse {url=plurl;body=plbody;}\n//清空输入的书籍变量\nbook.putCustomVariable('');\nlet by = java.post(url,body,headers).body();\njava.longToast(\"\\n\"+java.htmlFormat(by));\n\t}\n}\n\n//随机延时0-1秒\nlet tim = Math.floor(Math.random()*1001);\n//java.log('延时'+tim);\nPackages.java.lang.Thread.sleep(tim);\n\n//先发评论再访问刷新\nif (!i) {\n\tlet tt = java.hexDecodeToString(result);\n\t//不能直接访问tt，result无法改动\n\ttt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\n\tconst startTime=new Date().getTime();\n\tresult = java.ajax(nn+tt);\n\tconst endTime=new Date().getTime();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>9) {java.toast('\\n详情页访问延迟：'+speed.toFixed()+'秒');}\n\tjava.setContent(result);\n\t}\n\n//内容判断\nlet r = java.getString('@@meta[name=\"keywords\"]@content');\nlet name=String(r).replace(/\\, .+/,'');\nlet author=String(r).replace(/.+\\, /,'');\n\nif (name) {\n\tbook.name=String(book.name)||name;\n\tbook.author=String(book.author)||author;\n//放入书名\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n//放入ID和书名(黑名单用)\ncache.putMemory('8xid',{[bkid]: book.name});\n\tif (book.name!=name) {\n\t\t//书名不同，可能源地址换新了\n\t\t\tcache.put('8xbl1', source.getVariable() );\n\t\t\tsource.setVariable('');\n\t\t\t//清空源地址，会自动更新\n\t\t\tjava.toast(\"详情页获取的书名不同\");java.log(\"书名：\"+author);\n\t\t\t}\n\telse if (book.author!=author) {java.log(\"获取的作者不同，作者：\"+author);} //仅输出日志\n\t\n\t//else {java.log(`《${book.name}》${book.author}`);}//仅提示\n\t//书名和作者正常由此过\n\t}\nelse {\n\t//书名加载失败\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\t{{source.loginUrl}}\n\tjava.toast(\"详情页加载失败，请刷新重试\");\n}\n\tresult\n</js>",
      "intro": "{{\n//书名过长时在简介显示\nlet length = 0;\nlet fuhao = ',.?!:;()[]\"';\n\nfor (char of String(book.name)) {\n\tif (fuhao.includes(char) ) length += 0.5;\n\telse length += 1;\n\t}\n//大于18个全角字符\nif (length > 18) '《'+book.name+'》'\nelse '&#10;'\n}}\n{{\nlet zx = java.getString('class.divbox@h3@a@text');\nlet temp=java.getStringList('class.tabcontent@class.tabvalue.1@td[0:3,9,10]@text');\nrr=Object.values(temp);\n//处理rr\n[rr[0], rr[2]] = [rr[2], rr[0]];\nrr[0] = '最新：' + String(zx).replace(/^正文|^\\s+/,'') + String(rr[0]).replace('最后更新：',' ').replaceAll('-','/') + String(rr[1]).replace(/连载状态：(.+)/,' ($1)');\ndelete rr[1];\nrr[2] = String(rr[2]).replace(/作品分类：\\s*/,'分类：') + String(rr[3]).replace(/作品性质：(.+)/,' ($1)');\ndelete rr[3];\nrr[4] = String(rr[4]).replace(/总点击数：\\s*/,'点击：') + String(rr[5]).replace(/本月点击：(.+)/,'　$1 (月)');\ndelete rr[5];\n//评分\nlet pf=java.getString('.ratediv@text');\nlet r0 = rr.join('\\n') + '\\n' + String(pf).replace(/评分：\\s*/,'评分：');\n//简介\nlet r1=java.getString('.tabcontent .tabvalue:eq(0) div@html');\nif (r1==\"\") {r1='';}\nelse {\n r1 = '\\n简介：\\n' + String(r1).replace(/[\\u3000\\u2003]{2}/g,'\\n').replace('「','“').replace('」','”').replace(/\\>\\s*内容简介/,'')\n\t}\n//评论\nlet r2=String(java.getString('#content>.c_row@html'));\nlet xi = book.getVariable(\"custom\")==\"🔒\";\nif (r2==''||xi) {r2='';}\nelse {\n\tr2 = r2.replace(/<div class=\"c_subject\"[\\S\\s]+?div>|<span class=\"fr\"[\\S\\s]+?span>|回复：.+/g,'').replace(/<p[> ].+<\\/p>/g,'﹍');\n\t//java.htmlFormat(r);\n\t}\n\tr0 + r1 + r2\n}}",
      "kind": "b:contains(标签：)~a@text\n<js>\nString(result).slice(1, -1).replace(/[\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "class.divbox@h3@a@text\n<js>\nlet zx = java.get('8xzx');\nif (zx==result) java.put('ww',1);\nelse {java.put('8xzx',result);java.put('ww',0);}\nresult\n</js>",
      "name": "",
      "tocUrl": "<js>\n//清除用户自定义简介\n//book.upCustomIntro();\n//book.delete();\n//解书籍url为http\nlet ml = String(book.bookUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nif (mlj.includes('search.php') ) {java.toast('书籍地址异常');}\n//转化目录url\nlet mll = mlj.replace('/book/', '/read/');\n`data:;base64,${java.base64Encode(mll)},{'type':''}`;\n</js>",
      "wordCount": ".tabcontent .tabvalue.1@html##全文字数：(\\d+)##$1###"
    },
    "ruleContent": {
      "content": "<js>\nlet bin = book.durChapterIndex;\nlet cin = chapter.index;\nlet inn = cin - bin;\nlet dn = source.get('8xdn');\nlet sleep = Packages.java.lang.Thread.sleep;\n//java.log(chapter.title+'inn：'+inn);\nif ((inn==-4||inn==4)&&dn!=1) {java.longToast('\\n使用下载需要在书源登录界面开启功能\\n建议预下载设定不要大于3');}\n\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') { {{source.loginUrl}} }\n\nlet tim = Math.floor(Math.random()*501);\nlet ii = 1;\n//*手动限制并发，至少大于1.5秒才防拉黑，下载时靠并发率限制(有个0-50秒随机)\n\nswitch(inn) {\n\tcase 0: break;\n\tcase 1: sleep(1500+tim); break;\n\tcase 2: sleep(4500+tim); break;\n\tcase 3: sleep(7500+tim); break;\n\tcase -1: sleep(3000+tim); break;\n\tcase -2: dn==1 ? sleep(6000+tim) : ii=0;break;\n\tcase -3: dn==1 ? sleep(9000+tim) : ii=0;break;\n\tdefault: dn==1 ? sleep(tim*100) : ii=0;break;\n}\n\n//延时结束\n//java.log(chapter.title+'inn：'+inn+'延时结束');\nlet bkid = java.get('bkid');\n//放入书名和id\ncache.putMemory('8xid',{[bkid]: book.name});\nlet Info=source.getLoginInfoMap()||{};\nInfo['书名'] = book.name;\nsource.putLoginInfo(JSON.stringify(Info));\n\nlet tt = java.hexDecodeToString(result);\n//java.log('正文地址：'+tt);\nlet ml = String(book.tocUrl).replace(/.+,(.+),.+/,'$1');\nlet mlj = java.base64Decode(ml);\nlet ck0 = source.getLoginHeader();\nlet headers0 = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': mlj,\n        'cookie': ck0\r\n    };\n\nlet getr;\nif (ii) {\nconst startTime=new Date().getTime();\n//↓第一次访问正文\ngetr = java.get(tt,headers0);\n//java.log(chapter.title+'inn：'+inn+'访问结束');\nconst endTime=new Date().getTime();\n//判断访问情况，错误时把响应内容清除\nif (getr.statusCode() == 200) {\n\tresult = getr.body();\n\tlet speed = (endTime - startTime)/1000;\n\tif (speed>9) java.toast('\\n正文页访问延迟：'+speed.toFixed()+'秒');\n\t} else {java.toast('\\n正文链接访问出错，inn='+inn);result='';}\n//复原手机版链接，干掉字数统计\nchapter.url = tt.replace('www.','');\n// if ii 结束\n\t} else {result='';}\n//利用，下下章为空，会自动刷新特性\n\nlet rr = java.getString('class.mt mb@a@text||class.tc mb@a@text',result);\n\n//内容识别\nif (rr.includes(\"登录\") ) {\n\tjava.toast(\"💎请重新登录书源账号\");\n\tresult='';}\nelse if (rr.includes(\"充值\") ) {\nlet url = nn+'/modules/obook/buychapter.php';\nlet ck = source.getLoginHeader();\nlet tk = (ck.match(/UserToken%3D([^%]+)/)||['',''])[1];\nlet cid = tt.match(/cid\\=(\\d+)/)[1];\nlet body = `buytype=1&act=buy&jieqi_token=${tk}&cid=${cid}&submit=`;\nlet headers = {\r\n        'user-agent': ua,\n        'x-requested-with': x_r_w,\n        'sec-ch-ua': s_c_u,\n        'sec-ch-ua-platform': s_c_u_p,\r\n        'referer': tt,\n        'cookie': ck\r\n    };\n    \nlet vip = cache.getFromMemory('8xvip'+bkid);\nif (tk && nn&&vip!=1) {\n\t//标识本书准备请求VIP，防期间其它章节请求\n\tcache.putMemory('8xvip'+bkid,1);\n\tsleep(1000-tim);\n\tlet pt = java.post(url,body,headers);\n\tlet lc = pt.header(\"location\");\n\tjava.toast(\"🔓已购买\");\n\t//重新解析正文\n\tresult = java.ajax(lc);\n\tresult = java.getString('#content,#acontent@html',result);\n\t} else {java.longToast(\"💔VIP内容获取失败\");\n\tresult='';}\n\n}\nelse {\n//java.log('inn：'+inn+'完成');\n//无VIP登录，正常直接加载\n\nresult = java.getString('#content,#acontent@html',result);\n}\n//每次加载第9、339进行一次无感检查更新(天才的想法(狗头))，尽量保证下载不触发\nif ([9,339].includes(cin)&&Math.abs(inn)<5) gengxin();\n//java.log(chapter.title+'inn：'+inn+'代码结束');\nresult\n</js>",
      "imageStyle": "",
      "nextContentUrl": "",
      "payAction": "",
      "replaceRegex": "##八叉书库|八叉~书库|八叉书[,~]库|(?:833330|8xsk)\\.(?:xyz|org)|(?:833330|8xsk|八叉)([^\\.])(?:xyz|yxz|org|书库)|八~叉|书~库##$1",
      "sourceRegex": "",
      "title": ""
    },
    "ruleExplore": {
      "author": "td.2@text||span:contains(作者：)+span@text||a486@zuozhe\n<js>\nif (result == '[email protected]') {\n\tlet hex = java.getString('.__cf_email__.0@data-cfemail');\n\tresult = decodeEmail(String(hex),0);\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架无作者信息，延时让提示先显示\n\t\tPackages.java.lang.Thread.sleep(30);\n\tresult='';}\n\tresult\n</js>",
      "bookList": "<js>\nif (baseUrl.startsWith('http://127.0') ) {\n\tif(baseUrl.endsWith('1')) {\n\t\tlet d=new Date();\n\t\tr=`<a486 jianjie=\"${java.get('bj2')}\" time=\"${java.timeFormat(d)}\">反馈结果</a486>`;\n\t\tresult=[r]\n\t\t}\n\t\telse {result = [];}\n}\n\nelse if (baseUrl.includes('search.php?') ) {\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result = [];}\nelse {result = java.getElement('#jieqi_page_contents>div');}\n\t}\nelse if (baseUrl.includes('/book/') ){\njava.toast('暂不支持重定向结果');\nresult=[];\n\t}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\t//我的书架\n\tlet ts= java.getString('table@caption@ownText');\n\tts=String(ts).replace(/，(.+)\\s*选择分组.*$/,'，\\n$1');\n\tjava.toast('\\n'+ts);\n\tresult = java.getElement('table tr:has(a)');\n\t}\nelse {\nresult = java.getElements('@@#jieqi_page_contents>tr||#content div[class=\"c_row cf\"]');\n}\nresult\n</js>",
      "bookUrl": "<js>\nif (baseUrl.includes('search.php?') ) {\t\n\trs = java.getString('class.c_subject@a.0@href');\n\t} \n\telse if (baseUrl.includes('/bookcase.php') ) {\n\t\t//我的书架需要转化链接\n\t\trs = java.getString('td.1@a.-1@href');\trs='https://8x/book/'+rs.match(/aid=(\\d+)/)[1]+'.html';}\n\telse {\n\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');\n\t}\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (!nn) {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');\n\t}\nrr = String(rs).replace(/https\\:\\/{2}[A-z\\d\\.]+/, nn);\n\n`data:;base64,${java.base64Encode(rr)},{'type':''}`\n</js>",
      "coverUrl": "<js>\nif (/articlelist|sort/.test(baseUrl)) {\n\timg = java.getString('img@src');\n\t}\nelse if (baseUrl.includes('search.php?') ) {\n\timg = java.getString(String(source.ruleSearch.coverUrl));\n\t}\nelse{\n\tid = java.getString('td.0@a.-1@href').match(/\\d+(?=\\.html)/);\n\nif (baseUrl.includes('/bookcase.php') ) {id = java.getString('td.1@a.-1@href').match(/aid=(\\d+)/)[1];}\n\n  if (id < 1000) n = 0;\n  else n = String(id).slice(0,-3);\nimg = `/files/article/image/${n}/${id}/${id}s.jpg`;\n}\nimg\n</js>",
      "intro": "td.3@text||class.c_description@text||a486@jianjie\n<js>\nif (baseUrl.includes(\"top/words\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/goodnum\")) {'⠀\\n收藏数：'+result}\n//新书榜\nelse if (baseUrl.includes(\"top/newhot\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n点击数：'+result}\nelse if (baseUrl.includes(\"top/signtime\")) {\n  let t = parseInt(result)*1000;\n  let time = java.timeFormatUTC(t,\"⠀\\n签约时间：yy/MM/dd HH:mm:ss\",8*60*60*1000);\n  time}\nelse if (baseUrl.includes(\"top/lastupdate\")) {'⠀\\n字数：'+(result/10000).toFixed(2)+'万'}\nelse if (baseUrl.includes(\"top/postdate\")) {'⠀\\n入库时间：'+result}\nelse if (baseUrl.includes(\"top/allvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n总点击：'+result}\nelse if (baseUrl.includes(\"top/monthvisit\")) {\n\tresult = result>999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n月点击：'+result}\nelse if (baseUrl.includes(\"top/weekvisit\")) {\n\tresult = result>9999 ? \t(result/10000).toFixed(2)+'万' : result;\n\t'⠀\\n周点击：'+result}\nelse if (baseUrl.includes(\"top/allvote\")) {'⠀\\n总推荐：'+result}\nelse if (baseUrl.includes(\"top/monthvote\")) {'⠀\\n月推荐：'+result}\nelse if (baseUrl.includes(\"top/weekvote\")) {'⠀\\n周推荐：'+result}\nelse if (/articlelist|sort|search\\.php/.test(baseUrl)) {\n//含简介(搜索会经此)\nresult.replace('「','“').replace('」','”').replace(/\\s+/g,' ')}\nelse if (baseUrl.startsWith('http://127.0') ) {'⠀\\n'+result}\nelse {''}\n</js>",
      "kind": "<js>\nif (baseUrl.includes('search.php?') ) {java.getStringList(String(source.ruleSearch.kind));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getStringList('td.4@text');}\nelse {java.getStringList('td[4,5]@text||span:contains(更新：)+span@text||a486@time');}\n</js>",
      "lastChapter": "<js>\nif (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.lastChapter));}\nelse if (baseUrl.includes('/bookcase.php') ) {\n\tjava.getString('td.2@a.-1@text');}\n\telse {java.getString('td.1@a.-1@text||class.c_subject@a.-1@text');}\n</js>",
      "name": "<js>\nif (baseUrl.includes('search.php?') ) {\nresult=String(java.getString('.c_subject@text')).replace(/\\\"/g,'');\n//获取id目的\nrs = java.getString('class.c_subject@a.0@href');\n\t}\n\telse {\n\t\tresult =  java.getString('td.0@a.-1@text||class.c_subject@a.1@text||a486@text||td.1@a.-1@text');\n\t\t//获取id目的\n\t\trs = java.getString('td.0@a.-1@href||class.c_subject@a.1@href');}\n//||td.0@input@value书架的书不处理黑名单\n\nlet hmd=cache.getFile('8xhmd')||'{}';\nhmd=JSON.parse(hmd);\n//获取id，黑名单时书名为空\nlet id = (rs.match(/book\\/(\\d+)/)||['','lyc'])[1];\nlet i=false;\ntry {\nconst regexstr = source.getLoginInfoMap().get('正则书名黑名单');\nconst regex = eval(String(regexstr));\ni=regex.test(result);\n} catch(err) {\n\t//java.log('🌈正则书名异常：'+err);\n\t}\nif (id in hmd||i) {result='';}\nresult\n</js>",
      "wordCount": "<js>\nif (/articlelist|sort/.test(baseUrl)) {\n  java.getString('span:contains(字数：)+span@text')\n}\nelse if (baseUrl.includes('search.php?') ) {\tjava.getString(String(source.ruleSearch.wordCount));\n\t}\n</js>"
    },
    "ruleSearch": {
      "author": "span:contains(作者：)+span@text",
      "bookList": "<js>\njava.setContent(cache.get('8xss1') );\ncache.delete('8xss1');\nlet r1 = java.getString('#content .blockcontent@text');\nif (r1.includes(\"错误原因\")) {java.longToast(r1);result=[];}\nelse {\n\tresult = java.getElement('#jieqi_page_contents>div');\n}\nresult\n</js>",
      "bookUrl": "class.c_subject@a.0@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`\n</js>",
      "checkKeyWord": "作者：棺材",
      "coverUrl": ".fl img@src",
      "intro": ".c_description@text\n<js>\nresult.replace('「','“').replace('」','”').replace(/\\s/g,' ')\n</js>",
      "kind": "span:contains(更新：)+span@text&&span:contains(关键字：)+span@text\n<js>\nString(result).replace(/[\\[\\]\\#\\,]/g,'').split(' ');\n</js>",
      "lastChapter": "span:contains(最新章节：)+span@text",
      "name": ".c_subject@text\n<js>\nlet hmd=cache.getFile('8xhmd')||'{}';\nhmd=JSON.parse(hmd);\n//获取id，黑名单时书名为空\nlet id = java.getString('class.c_subject@a.0@href');\nid = id.match(/book\\/(\\d+)/)[1];\nlet i=false;\ntry {\nconst regexstr = source.getLoginInfoMap().get('正则书名黑名单');\nconst regex = eval(String(regexstr));\ni=regex.test(result);\n} catch(err) {\n\t//java.log('🌈正则书名异常：'+err);\n\t}\nif (id in hmd||i) {result='';}\nresult\n</js>",
      "wordCount": "span:contains(字数：)+span@text"
    },
    "ruleToc": {
      "chapterList": "<js>\nnn = String(source.getVariable()).replace(/\\/$/,'');\nif (nn=='') {\n\t{{source.loginUrl}}\n\tnn = String(source.getVariable()).replace(/\\/$/,'');}\nlet sj=java.get('sj');\nif (sj=='') java.put('sj',1); //书架标识\nlet ww = java.get('ww'),\nlyc = java.get('lyc'),\nsx1 = java.get('sx1'); //ww是否有新章，sx刷新标识从目录来(已在书架才会触发)\nlet sj2=source.get('8xsj'); //启用同步的标识\nlet bkid=java.get('bkid');\nif (sj!='3'&&sx1!='1'&&sj2=='1'&&bkid!='') {java.put('sj',3);tbshujia(nn,bkid);}\n//不为3未加书架，不为1不过详情，为1开启功能，且参数不为空\nif (ww!=1 || lyc=='' || sx1!=1) {\nlet tim = Math.floor(Math.random()*1501);\nlet tt = java.hexDecodeToString(result);\ntt=String(tt).replace(/https\\:\\/{2}[A-z\\d\\.]+/,'');\nPackages.java.lang.Thread.sleep(tim);\nconst startTime=new Date().getTime();\nresult = java.ajax(nn+tt);\nconst endTime=new Date().getTime();\nlet speed = (endTime - startTime)/1000;\nif (speed>9) {java.toast('\\n目录页访问延迟：'+speed.toFixed()+'秒');}\n//缩减储存\nresult=java.getString('.index@all',result);\njava.put('lyc',result);\n} else {result=lyc;}\njava.put('sx1',0); //还原详情到目录标识\njava.setContent(result);\nresult=java.getElements('.index dd,dt');\n</js>",
      "chapterName": "text##八叉书库|833330\\.xyz|八叉书[。·]库|8xsk?[。·]org|八叉~书库|八~叉书~库",
      "chapterUrl": "a@href\n<js>\n`data:;base64,${java.base64Encode(result)},{'type':''}`;\n</js>",
      "formatJs": "",
      "isPay": "",
      "isVip": "",
      "isVolume": "dt@text",
      "preUpdateJs": "",
      "updateTime": "{{@@dd@a@title##\\d{1,2}\\:\\d{1,2}更新，共(\\d+字).*## $1}}\n{{@@dd@em@text##.+##💎}}"
    },
    "searchUrl": "<js>\neval(String(source.loginUrl));\nnn = String(source.getVariable()).replace(/\\/$/,'');\nlet url = `${nn}/modules/article/search.php`;\ntry {\n\tif (key.startsWith('书名：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=articlename&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('作者：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=author&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (key.startsWith('标签：') ) {\n\t\turl += `?searchkey=${key.substr(3)}&searchtype=keywords&page=${page}`\n\t\t\tss = java.get(url,{\t'user-agent': ua});\n\t\t}\n\t\t\n\t\telse if (page == 1) {\n\t\tftsm();\n\t\tlet body = `searchtype=all&searchkey=${key}&act=search&submit=`;\n\tss = java.post(url,body,{\t'user-agent': ua});\n\t}\n\t\n\telse {\n\t\turl +=\t`?searchkey=${key}&searchtype=all&page=${page}`\n\tss = java.get(url,{\t'user-agent': ua});\n\t}\n\ncode = ss.statusCode();\nif (code == 302) {\n\t//重定向\n\tss.header(\"location\");\n\t}\nelse if (code == 200) {\n\tcache.put('8xss1', ss.body() );\n\t`data:;base64,${java.base64Encode(nn)},{'type':''}`;\n\t}\nelse if (code == 520) {\n\tjava.toast(\"💔IP被拉黑\");\n\t}\nelse {\n\tjava.toast(\"💔搜索响应码异常\");\n\t}\n\n\n} catch(err) {\n\tcache.put('8xbl1', source.getVariable() );\n\tsource.setVariable('');\n\turl\n\t}\n\n</js>",
    "variableComment": "♦源变量：\n　 当前书源使用的网址\n　 可点击发现页版本号手动刷新\n\n♦书籍变量：\n　 ①填写  🔒 并刷新，关闭本书评论显示\n　 ②填写“目录”并刷新，强制刷新目录\n　 ③填写分数并刷新，使用分数进行评分\n　 ④填写其它并刷新，内容作为评论发送\n分数格式示意“1分”“2分”…“10分”\n\n㊟详情页检测到有更新内容时才刷新目录(书架刷新不影响)\n\n！注意区分源变量和书籍变量\n",
    "weight": 0
  },
  {
    "bookSourceComment": "by天天的鸟蛋蛋\n目录url by= = \n2025/2/8",
    "bookSourceName": "哎呦文学",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.auwxw.com",
    "customOrder": 0,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "lastUpdateTime": "1738949245910",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property$=author]@content",
      "coverUrl": "[property$=image]@content",
      "init": "",
      "intro": "[property$=description]@content",
      "kind": "[property~=category|status|update_time]@content",
      "lastChapter": "[property$=latest_chapter_name]@content",
      "name": "[property$=book_name]@content",
      "tocUrl": "text.阅读目录@href"
    },
    "ruleContent": {
      "content": "#Lab_Contents@html"
    },
    "ruleExplore": [],
    "ruleSearch": {
      "author": ".right_wid a:nth-child(2)@text",
      "bookList": "#ListContents > div:nth-child(n+1)",
      "bookUrl": "a@href",
      "coverUrl": "img@src",
      "intro": ".neirongh5 > a@text",
      "kind": ".right_wid > .biaoqian > a@text",
      "lastChapter": "div:nth-child(4) > a@text##最新章节",
      "name": ".right_wid .fonttext@text"
    },
    "ruleToc": {
      "chapterList": "div:nth-child(n+5) > span:nth-child(n+1) > a",
      "chapterName": "text",
      "chapterUrl": "href",
      "nextTocUrl": ""
    },
    "searchUrl": "/aulist/{{key}}.html",
    "weight": 0
  }
]